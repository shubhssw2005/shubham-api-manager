# Ultra Low-Latency C++ Database Configuration
# This file contains configuration settings for the database connectivity layer

[database]
# Primary database connection settings
host = localhost
port = 5432
database = ultra_cpp_production
username = ultra_cpp_user
password = ${DATABASE_PASSWORD}
connection_timeout_ms = 5000
query_timeout_ms = 30000
enable_ssl = true
ssl_mode = require

# Performance tuning
tcp_keepalives_idle = 600
tcp_keepalives_interval = 30
tcp_keepalives_count = 3
application_name = ultra_cpp_connector

[connection_pool]
# Connection pool configuration
min_connections = 5
max_connections = 50
connection_idle_timeout_ms = 300000  # 5 minutes
health_check_interval_ms = 30000     # 30 seconds
enable_load_balancing = true
enable_failover = true

# Load balancing strategy: round_robin, random, least_connections, weighted_round_robin
load_balancing_strategy = round_robin

# Replica hosts for read scaling (comma-separated)
replica_hosts = replica1.example.com:5432,replica2.example.com:5432

[query_cache]
# Query result caching configuration
max_entries = 10000
default_ttl_seconds = 300           # 5 minutes
enable_compression = true
max_result_size_bytes = 1048576     # 1MB

# Cache cleanup interval
cleanup_interval_seconds = 60

[io_uring]
# Asynchronous I/O configuration
queue_depth = 256
worker_threads = 4
enable_sqpoll = true
enable_iopoll = false

# Buffer management
buffer_pool_size = 1048576          # 1MB
max_buffer_size = 65536             # 64KB

[performance]
# Performance monitoring and optimization
enable_hardware_counters = true
enable_latency_tracking = true
enable_query_profiling = true

# Metrics collection
metrics_collection_interval_ms = 1000
metrics_buffer_size = 10000

# Performance thresholds (in nanoseconds)
slow_query_threshold_ns = 10000000  # 10ms
very_slow_query_threshold_ns = 100000000  # 100ms

[logging]
# Database-specific logging configuration
log_level = info
log_queries = false
log_slow_queries = true
log_connection_events = true
log_pool_events = true

# Log file settings
log_file = /var/log/ultra-cpp/database.log
max_log_file_size_mb = 100
max_log_files = 10

[security]
# Security settings
enable_query_validation = true
max_query_length = 65536
enable_sql_injection_detection = true
enable_audit_logging = true

# Connection security
require_ssl = true
ssl_cert_file = /etc/ssl/certs/ultra-cpp-client.crt
ssl_key_file = /etc/ssl/private/ultra-cpp-client.key
ssl_ca_file = /etc/ssl/certs/ca-certificates.crt

[monitoring]
# Monitoring and alerting configuration
enable_prometheus_metrics = true
prometheus_port = 9090
prometheus_path = /metrics

# Health check endpoints
enable_health_checks = true
health_check_port = 8080
health_check_path = /health

# Alerting thresholds
max_connection_failures = 10
max_query_failures_per_minute = 100
max_average_latency_ms = 50

[development]
# Development and testing settings
enable_debug_logging = false
enable_query_explain = false
enable_performance_profiling = false

# Test database settings
test_database = ultra_cpp_test
test_username = ultra_cpp_test_user
test_password = ${TEST_DATABASE_PASSWORD}

[production]
# Production-specific settings
enable_connection_encryption = true
enable_query_caching = true
enable_connection_pooling = true
enable_failover = true

# Production performance settings
max_connections_per_host = 100
connection_retry_attempts = 3
connection_retry_delay_ms = 1000

# Resource limits
max_memory_usage_mb = 1024
max_cpu_usage_percent = 80

[backup]
# Backup and recovery settings
enable_connection_backup = true
backup_connection_count = 2
backup_host = backup.example.com
backup_port = 5432

# Failover settings
failover_timeout_ms = 5000
failover_retry_attempts = 3
enable_automatic_failback = true