{{- if .Values.autoscaling.verticalPodAutoscaler.enabled }}
# VPA Admission Controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-admission-controller
  namespace: kube-system
  labels:
    app: vpa-admission-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-admission-controller
  template:
    metadata:
      labels:
        app: vpa-admission-controller
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: vpa-admission-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      containers:
      - name: admission-controller
        image: {{ .Values.autoscaling.verticalPodAutoscaler.admissionController.image }}:{{ .Values.autoscaling.verticalPodAutoscaler.admissionController.tag }}
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tls-certs
          mountPath: "/etc/tls-certs"
          readOnly: true
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        ports:
        - name: metrics
          containerPort: 8944
        - name: webhook
          containerPort: 8000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: tls-certs
        secret:
          secretName: vpa-tls-certs
      nodeSelector:
        kubernetes.io/os: linux
---
# VPA Recommender
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-recommender
  namespace: kube-system
  labels:
    app: vpa-recommender
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-recommender
  template:
    metadata:
      labels:
        app: vpa-recommender
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: vpa-recommender
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      containers:
      - name: recommender
        image: {{ .Values.autoscaling.verticalPodAutoscaler.recommender.image }}:{{ .Values.autoscaling.verticalPodAutoscaler.recommender.tag }}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 500Mi
        ports:
        - name: metrics
          containerPort: 8942
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        command:
        - ./recommender
        - --v=4
        - --stderrthreshold=info
        - --pod-recommendation-min-cpu-millicores={{ .Values.autoscaling.verticalPodAutoscaler.recommender.minCpuMillicores }}
        - --pod-recommendation-min-memory-mb={{ .Values.autoscaling.verticalPodAutoscaler.recommender.minMemoryMb }}
        - --target-cpu-percentile={{ .Values.autoscaling.verticalPodAutoscaler.recommender.targetCpuPercentile }}
        - --recommendation-margin-fraction={{ .Values.autoscaling.verticalPodAutoscaler.recommender.recommendationMarginFraction }}
        - --checkpoints-timeout={{ .Values.autoscaling.verticalPodAutoscaler.recommender.checkpointsTimeout }}
      nodeSelector:
        kubernetes.io/os: linux
---
# VPA Updater
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-updater
  namespace: kube-system
  labels:
    app: vpa-updater
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-updater
  template:
    metadata:
      labels:
        app: vpa-updater
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: vpa-updater
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      containers:
      - name: updater
        image: {{ .Values.autoscaling.verticalPodAutoscaler.updater.image }}:{{ .Values.autoscaling.verticalPodAutoscaler.updater.tag }}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 500Mi
        ports:
        - name: metrics
          containerPort: 8943
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        command:
        - ./updater
        - --v=4
        - --stderrthreshold=info
        - --min-replicas={{ .Values.autoscaling.verticalPodAutoscaler.updater.minReplicas }}
        - --eviction-tolerance={{ .Values.autoscaling.verticalPodAutoscaler.updater.evictionTolerance }}
        - --evictions-per-interval={{ .Values.autoscaling.verticalPodAutoscaler.updater.evictionsPerInterval }}
        - --eviction-rate-burst={{ .Values.autoscaling.verticalPodAutoscaler.updater.evictionRateBurst }}
      nodeSelector:
        kubernetes.io/os: linux
---
# Service Accounts
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-admission-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-recommender
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-updater
  namespace: kube-system
---
# RBAC for VPA Admission Controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-admission-controller
rules:
- apiGroups: [""]
  resources: ["pods", "configmaps", "nodes", "limitranges"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingadmissionconfigurations"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["poc.autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-admission-controller
subjects:
- kind: ServiceAccount
  name: vpa-admission-controller
  namespace: kube-system
---
# RBAC for VPA Recommender
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-recommender
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "limitranges"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: ["poc.autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: ["autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources: ["replicationcontrollers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-recommender
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-recommender
subjects:
- kind: ServiceAccount
  name: vpa-recommender
  namespace: kube-system
---
# RBAC for VPA Updater
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-updater
rules:
- apiGroups: [""]
  resources: ["pods", "events"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingadmissionconfigurations"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["poc.autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: ["autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources: ["replicationcontrollers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-updater
subjects:
- kind: ServiceAccount
  name: vpa-updater
  namespace: kube-system
---
# Webhook Configuration
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingAdmissionWebhook
metadata:
  name: vpa-webhook-config
webhooks:
- name: vpa.k8s.io
  clientConfig:
    service:
      name: vpa-webhook
      namespace: kube-system
      path: "/"
  rules:
  - operations: ["CREATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  admissionReviewVersions: ["v1"]
  sideEffects: None
  failurePolicy: Ignore
---
# VPA Webhook Service
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  namespace: kube-system
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app: vpa-admission-controller
{{- end }}