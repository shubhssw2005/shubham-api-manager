{{- if .Values.jaeger.enabled }}
{{- if .Values.jaeger.allInOne.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-all-in-one
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: all-in-one
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      component: all-in-one
  template:
    metadata:
      labels:
        app: jaeger
        component: all-in-one
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: jaeger
          image: {{ .Values.jaeger.allInOne.image }}
          ports:
            - containerPort: 16686
              name: query
            - containerPort: 14268
              name: collector
            - containerPort: 14250
              name: grpc
            - containerPort: 6831
              name: agent-compact
              protocol: UDP
            - containerPort: 6832
              name: agent-binary
              protocol: UDP
            - containerPort: 5778
              name: agent-config
            - containerPort: 14269
              name: metrics
          env:
            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: ":9411"
            - name: SPAN_STORAGE_TYPE
              value: {{ .Values.jaeger.storage.type | default "memory" }}
            {{- if eq .Values.jaeger.storage.type "elasticsearch" }}
            - name: ES_SERVER_URLS
              value: "http://{{ .Values.jaeger.storage.elasticsearch.host }}:{{ .Values.jaeger.storage.elasticsearch.port }}"
            - name: ES_USERNAME
              value: {{ .Values.jaeger.storage.elasticsearch.username | default "" }}
            - name: ES_PASSWORD
              value: {{ .Values.jaeger.storage.elasticsearch.password | default "" }}
            {{- end }}
          resources:
            {{- toYaml .Values.jaeger.allInOne.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: 14269
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 14269
            initialDelaySeconds: 5
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: query
spec:
  type: ClusterIP
  ports:
    - port: 16686
      targetPort: 16686
      name: query
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
    - port: 14268
      targetPort: 14268
      name: collector
    - port: 14250
      targetPort: 14250
      name: grpc
    - port: 9411
      targetPort: 9411
      name: zipkin
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: agent
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 6831
      targetPort: 6831
      name: agent-compact
      protocol: UDP
    - port: 6832
      targetPort: 6832
      name: agent-binary
      protocol: UDP
    - port: 5778
      targetPort: 5778
      name: agent-config
  selector:
    app: jaeger
    component: all-in-one
{{- else }}
# Distributed Jaeger deployment for production
{{- if .Values.jaeger.collector.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: collector
spec:
  replicas: {{ .Values.jaeger.collector.replicaCount }}
  selector:
    matchLabels:
      app: jaeger
      component: collector
  template:
    metadata:
      labels:
        app: jaeger
        component: collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: jaeger-collector
          image: jaegertracing/jaeger-collector:1.51
          ports:
            - containerPort: 14268
              name: collector
            - containerPort: 14250
              name: grpc
            - containerPort: 14269
              name: metrics
          env:
            - name: SPAN_STORAGE_TYPE
              value: {{ .Values.jaeger.storage.type }}
            {{- if eq .Values.jaeger.storage.type "elasticsearch" }}
            - name: ES_SERVER_URLS
              value: "http://{{ .Values.jaeger.storage.elasticsearch.host }}:{{ .Values.jaeger.storage.elasticsearch.port }}"
            {{- end }}
          resources:
            {{- toYaml .Values.jaeger.collector.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
    - port: 14268
      targetPort: 14268
      name: collector
    - port: 14250
      targetPort: 14250
      name: grpc
  selector:
    app: jaeger
    component: collector
{{- end }}

{{- if .Values.jaeger.query.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-query
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: query
spec:
  replicas: {{ .Values.jaeger.query.replicaCount }}
  selector:
    matchLabels:
      app: jaeger
      component: query
  template:
    metadata:
      labels:
        app: jaeger
        component: query
    spec:
      containers:
        - name: jaeger-query
          image: jaegertracing/jaeger-query:1.51
          ports:
            - containerPort: 16686
              name: query
          env:
            - name: SPAN_STORAGE_TYPE
              value: {{ .Values.jaeger.storage.type }}
            {{- if eq .Values.jaeger.storage.type "elasticsearch" }}
            - name: ES_SERVER_URLS
              value: "http://{{ .Values.jaeger.storage.elasticsearch.host }}:{{ .Values.jaeger.storage.elasticsearch.port }}"
            {{- end }}
          resources:
            {{- toYaml .Values.jaeger.query.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    component: query
spec:
  type: ClusterIP
  ports:
    - port: 16686
      targetPort: 16686
      name: query
  selector:
    app: jaeger
    component: query
{{- if .Values.jaeger.query.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-query
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- toYaml .Values.jaeger.query.ingress.annotations | nindent 4 }}
spec:
  ingressClassName: {{ .Values.jaeger.query.ingress.ingressClassName }}
  {{- if .Values.jaeger.query.ingress.tls }}
  tls:
    {{- toYaml .Values.jaeger.query.ingress.tls | nindent 4 }}
  {{- end }}
  rules:
    {{- range .Values.jaeger.query.ingress.hosts }}
    - host: {{ . }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jaeger-query
                port:
                  number: 16686
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}