{{- if .Values.grafana.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
data:
  datasources.yaml: |
    {{- toYaml .Values.grafana.datasources | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
data:
  dashboards.yaml: |
    {{- toYaml .Values.grafana.dashboardProviders | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-default
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
data:
  system-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "System Overview",
        "tags": ["system", "overview"],
        "style": "dark",
        "timezone": "browser",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "100 - (avg by(instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "{{instance}}"
              }
            ],
            "yAxes": [
              {
                "label": "CPU %",
                "min": 0,
                "max": 100
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100",
                "legendFormat": "{{instance}}"
              }
            ],
            "yAxes": [
              {
                "label": "Memory %",
                "min": 0,
                "max": 100
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Network I/O",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(node_network_receive_bytes_total[5m])",
                "legendFormat": "RX {{device}}"
              },
              {
                "expr": "rate(node_network_transmit_bytes_total[5m])",
                "legendFormat": "TX {{device}}"
              }
            ],
            "yAxes": [
              {
                "label": "Bytes/sec",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Disk I/O",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(node_disk_read_bytes_total[5m])",
                "legendFormat": "Read {{device}}"
              },
              {
                "expr": "rate(node_disk_written_bytes_total[5m])",
                "legendFormat": "Write {{device}}"
              }
            ],
            "yAxes": [
              {
                "label": "Bytes/sec",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ]
      }
    }

  kubernetes-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Kubernetes Overview",
        "tags": ["kubernetes", "overview"],
        "style": "dark",
        "timezone": "browser",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Pod Status",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(kube_pod_status_phase{phase=\"Running\"})",
                "legendFormat": "Running"
              },
              {
                "expr": "sum(kube_pod_status_phase{phase=\"Pending\"})",
                "legendFormat": "Pending"
              },
              {
                "expr": "sum(kube_pod_status_phase{phase=\"Failed\"})",
                "legendFormat": "Failed"
              }
            ],
            "gridPos": {"h": 8, "w": 8, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Node Status",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(kube_node_status_condition{condition=\"Ready\",status=\"true\"})",
                "legendFormat": "Ready"
              },
              {
                "expr": "sum(kube_node_status_condition{condition=\"Ready\",status=\"false\"})",
                "legendFormat": "Not Ready"
              }
            ],
            "gridPos": {"h": 8, "w": 8, "x": 8, "y": 0}
          },
          {
            "id": 3,
            "title": "Resource Usage",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(container_cpu_usage_seconds_total{container!=\"POD\",container!=\"\"}[5m]))",
                "legendFormat": "CPU Cores"
              },
              {
                "expr": "sum(container_memory_working_set_bytes{container!=\"POD\",container!=\"\"}) / 1024^3",
                "legendFormat": "Memory GB"
              }
            ],
            "gridPos": {"h": 8, "w": 8, "x": 16, "y": 0}
          },
          {
            "id": 4,
            "title": "Pod Restarts",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(kube_pod_container_status_restarts_total[5m])",
                "legendFormat": "{{namespace}}/{{pod}}"
              }
            ],
            "yAxes": [
              {
                "label": "Restarts/sec",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ]
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-slo
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
data:
  {{- (.Files.Glob "dashboards/*.json").AsConfig | nindent 2 }}
{{- end }}