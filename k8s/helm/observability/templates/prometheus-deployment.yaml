{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    component: server
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.prometheus.prometheusSpec.replicas | default 1 }}
  selector:
    matchLabels:
      app: prometheus
      component: server
  template:
    metadata:
      labels:
        app: prometheus
        component: server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: prometheus-server
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time={{ .Values.prometheus.prometheusSpec.retention }}'
            - '--storage.tsdb.retention.size={{ .Values.prometheus.prometheusSpec.retentionSize }}'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
            - '--web.external-url=http://{{ .Values.global.domain }}/prometheus'
            {{- if .Values.prometheus.prometheusSpec.externalLabels }}
            {{- range $key, $value := .Values.prometheus.prometheusSpec.externalLabels }}
            - '--web.external-labels={{ $key }}={{ $value }}'
            {{- end }}
            {{- end }}
          ports:
            - containerPort: 9090
              name: http
          resources:
            {{- toYaml .Values.prometheus.prometheusSpec.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: storage
              mountPath: /prometheus
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 5
            timeoutSeconds: 5
      volumes:
        - name: config
          configMap:
            name: prometheus-config
        - name: storage
          {{- if .Values.prometheus.prometheusSpec.storageSpec }}
          persistentVolumeClaim:
            claimName: prometheus-storage
          {{- else }}
          emptyDir: {}
          {{- end }}
---
{{- if .Values.prometheus.prometheusSpec.storageSpec }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: {{ .Release.Namespace }}
spec:
  {{- toYaml .Values.prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec | nindent 2 }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-server
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-server
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-server
subjects:
  - kind: ServiceAccount
    name: prometheus-server
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    component: server
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9090
      name: http
  selector:
    app: prometheus
    component: server
{{- end }}