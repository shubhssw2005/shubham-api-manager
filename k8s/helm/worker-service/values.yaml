workers:
  media-processor:
    enabled: true
    replicaCount: 5
    image:
      repository: your-ecr-repo/media-worker
      tag: "latest"
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 1000m
        memory: 2Gi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 50
      targetCPUUtilizationPercentage: 70
      customMetrics:
        - type: External
          external:
            metric:
              name: sqs_messages_visible
              selector:
                matchLabels:
                  queue_name: media-processing
            target:
              type: AverageValue
              averageValue: "5"
      # Vertical Pod Autoscaler
      verticalPodAutoscaler:
        enabled: true
        updateMode: "Auto"
        minAllowed:
          cpu: "500m"
          memory: "512Mi"
        maxAllowed:
          cpu: "8000m"
          memory: "16Gi"
    nodeSelector:
      workload-type: media-processing
    tolerations:
      - key: "workload-type"
        operator: "Equal"
        value: "media-processing"
        effect: "NoSchedule"

  outbox-processor:
    enabled: true
    replicaCount: 3
    image:
      repository: your-ecr-repo/outbox-worker
      tag: "latest"
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 70

  data-export:
    enabled: true
    replicaCount: 2
    image:
      repository: your-ecr-repo/data-export-worker
      tag: "latest"
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 80

imagePullSecrets: []

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/worker-service-role
  name: ""

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

podDisruptionBudget:
  enabled: true
  minAvailable: 1

env:
  - name: NODE_ENV
    value: "production"
  - name: AWS_REGION
    value: "us-east-1"
  - name: REDIS_URL
    valueFrom:
      secretKeyRef:
        name: redis-secret
        key: url
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: database-secret
        key: url

istio:
  enabled: true
  # Workers don't need ingress traffic, only sidecar for mTLS
  sidecarOnly: true